From 227e33a5663caeb0a5620fa4c03e1a06ddfa68fd Mon Sep 17 00:00:00 2001
From: "Frank Ch. Eigler" <fche@redhat.com>
Date: Fri, 29 Jan 2021 20:54:42 +0000
Subject: [PATCH 3/6] PR27273: port to linux 5.11, kretprobes

Linux commit d741bf41d7c changed how kretprobe_instances can
find their kretprobes.  Adapt with an autoconf and wrapper
function.
---
 buildrun.cxx                           |  1 +
 runtime/compatdefs.h                   | 10 ++++++++++
 runtime/linux/autoconf-get-kretprobe.c |  6 ++++++
 tapsets.cxx                            |  4 ++--
 4 files changed, 19 insertions(+), 2 deletions(-)
 create mode 100644 runtime/linux/autoconf-get-kretprobe.c

diff --git a/buildrun.cxx b/buildrun.cxx
index 68a40176a..ab447ef29 100644
--- a/buildrun.cxx
+++ b/buildrun.cxx
@@ -379,6 +379,7 @@ compile_pass (systemtap_session& s)
   output_autoconf(s, o, cs, "autoconf-utrace-regset.c", "STAPCONF_UTRACE_REGSET", NULL);
   output_autoconf(s, o, cs, "autoconf-uprobe-get-pc.c", "STAPCONF_UPROBE_GET_PC", NULL);
   output_autoconf(s, o, cs, "autoconf-hlist-4args.c", "STAPCONF_HLIST_4ARGS", NULL);
+  output_autoconf(s, o, cs, "autoconf-get-kretprobe.c", "STAPCONF_GET_KRETPROBE", NULL);
   output_exportconf(s, o2, "tsc_khz", "STAPCONF_TSC_KHZ");
   output_exportconf(s, o2, "cpu_khz", "STAPCONF_CPU_KHZ");
   output_exportconf(s, o2, "__module_text_address", "STAPCONF_MODULE_TEXT_ADDRESS");
diff --git a/runtime/compatdefs.h b/runtime/compatdefs.h
index 0bca4f67d..44807518f 100644
--- a/runtime/compatdefs.h
+++ b/runtime/compatdefs.h
@@ -104,4 +104,14 @@ static inline int _stp_task_pt_regs_valid(struct task_struct *task,
   return 0;
 }
 
+
+#ifndef STAPCONF_GET_KRETPROBE
+/* prior to linux commit d741bf41d7c7db4898 */
+static inline struct kretprobe* get_kretprobe(struct kretprobe_instance *inst)
+{
+  return inst->rp;
+}
+#endif
+
+
 #endif /* _STP_COMPAT_H_ */
diff --git a/runtime/linux/autoconf-get-kretprobe.c b/runtime/linux/autoconf-get-kretprobe.c
new file mode 100644
index 000000000..ae5b4ab51
--- /dev/null
+++ b/runtime/linux/autoconf-get-kretprobe.c
@@ -0,0 +1,6 @@
+#include <linux/kprobes.h>
+
+void* foo(struct kretprobe_instance* ri)
+{
+        return get_kretprobe(ri);
+}
diff --git a/tapsets.cxx b/tapsets.cxx
index 52c59fa50..74d6d3ce0 100644
--- a/tapsets.cxx
+++ b/tapsets.cxx
@@ -6274,7 +6274,7 @@ generic_kprobe_derived_probe_group::emit_module_decls (systemtap_session& s)
   s.op->newline();
   s.op->newline() << "static int enter_kretprobe_common (struct kretprobe_instance *inst,";
   s.op->line() << " struct pt_regs *regs, int entry) {";
-  s.op->newline(1) << "struct kretprobe *krp = inst->rp;";
+  s.op->newline(1) << "struct kretprobe *krp = get_kretprobe(inst);";
 
   // NB: as of PR5673, the kprobe|kretprobe union struct is in BSS
   s.op->newline() << "int kprobe_idx = ((uintptr_t)krp-(uintptr_t)stap_kprobes)/sizeof(struct stap_kprobe);";
@@ -6302,7 +6302,7 @@ generic_kprobe_derived_probe_group::emit_module_decls (systemtap_session& s)
   s.op->newline() << "{";
   s.op->newline(1) << "unsigned long kprobes_ip = REG_IP(c->kregs);";
   s.op->newline() << "if (entry)";
-  s.op->newline(1) << "SET_REG_IP(regs, (unsigned long) inst->rp->kp.addr);";
+  s.op->newline(1) << "SET_REG_IP(regs, (unsigned long) get_kretprobe(inst)->kp.addr);";
   s.op->newline(-1) << "else";
   s.op->newline(1) << "SET_REG_IP(regs, (unsigned long)inst->ret_addr);";
   s.op->newline(-1) << "(sp->ph) (c);";
-- 
2.31.1

