From dde1cd01fc90506c4db8de4958a3abacc96a8d51 Mon Sep 17 00:00:00 2001
From: "Frank Ch. Eigler" <fche@redhat.com>
Date: Tue, 13 Apr 2021 12:08:12 -0400
Subject: [PATCH 6/6] runtime: port to 5.12-rc unexporting of mutex_lock

Use an exportconf to make conditional our manual mutex_lock usage in
kallsyms symbol gathering.
---
 buildrun.cxx            |  3 +++
 runtime/linux/kprobes.c | 12 ++++++++++--
 session.cxx             |  2 +-
 3 files changed, 14 insertions(+), 3 deletions(-)

diff --git a/buildrun.cxx b/buildrun.cxx
index 8d48de0f4..cad745050 100644
--- a/buildrun.cxx
+++ b/buildrun.cxx
@@ -525,6 +525,9 @@ compile_pass (systemtap_session& s)
   // used by runtime/linux/netfilter.c
   output_exportconf(s, o2, "nf_register_hook", "STAPCONF_NF_REGISTER_HOOK");
 
+  // runtime/linux/kprobes.c
+  output_exportconf(s, o2, "module_mutex", "STAPCONF_MODULE_MUTEX");
+    
   // used by tapset/linux/ioblock.stp
   output_exportconf(s, o2, "disk_get_part", "STAPCONF_DISK_GET_PART");
 
diff --git a/runtime/linux/kprobes.c b/runtime/linux/kprobes.c
index d2fe88680..97bf80614 100644
--- a/runtime/linux/kprobes.c
+++ b/runtime/linux/kprobes.c
@@ -745,11 +745,15 @@ stapkp_init(struct stap_kprobe_probe *probes,
        sd.nprobes = nprobes;
        sd.probe_max = probe_max;
        sd.modname = NULL;
+#ifdef STAPCONF_MODULE_MUTEX
        mutex_lock(&module_mutex);
+#endif
        preempt_disable();
        kallsyms_on_each_symbol(stapkp_symbol_callback, &sd);
        preempt_enable();
+#ifdef STAPCONF_MODULE_MUTEX
        mutex_unlock(&module_mutex);
+#endif
        dbug_stapkp("found %lu probes\n", sd.probe_max);
      }
    }
@@ -813,11 +817,15 @@ stapkp_refresh(const char *modname,
 	 sd.nprobes = nprobes;
 	 sd.probe_max = probe_max;
 	 sd.modname = modname;
-	 mutex_lock(&module_mutex);
+#ifdef STAPCONF_MODULE_MUTEX
+         mutex_lock(&module_mutex);
+#endif
 	 preempt_disable();
 	 kallsyms_on_each_symbol(stapkp_symbol_callback, &sd);
 	 preempt_enable();
-	 mutex_unlock(&module_mutex);
+#ifdef STAPCONF_MODULE_MUTEX
+         mutex_unlock(&module_mutex);
+#endif
        }
      }
    }
diff --git a/session.cxx b/session.cxx
index 4eb67102c..091bb4097 100644
--- a/session.cxx
+++ b/session.cxx
@@ -495,7 +495,7 @@ systemtap_session::version ()
              "Copyright (C) 2005-2020 Red Hat, Inc. and others\n"   // PRERELEASE
              "This is free software; see the source for copying conditions.\n",
              version_string().c_str());
-  cout << _F("tested kernel versions: %s ... %s\n", "2.6.32", "5.11.0-rc");   // PRERELEASE
+  cout << _F("tested kernel versions: %s ... %s\n", "2.6.32", "5.12.0-rc");   // PRERELEASE
   
   cout << _("enabled features:")
 #ifdef HAVE_AVAHI
-- 
2.31.1

